error[E0277]: the trait bound `SevenMod8: TotalSizeIsMultipleOfEightBits` is not satisfied
 --> tests/filled-param/invalid-specified-as-filled.rs:5:1
  |
5 | pub struct UnfilledBitfield {
  | ^^^ the trait `TotalSizeIsMultipleOfEightBits` is not implemented for `SevenMod8`
  |
  = help: the trait `TotalSizeIsMultipleOfEightBits` is implemented for `ZeroMod8`
note: required by a bound in `CheckTotalSizeMultipleOf8`
 --> src/private/checks.rs
  |
  | pub trait CheckTotalSizeMultipleOf8
  |           ------------------------- required by a bound in this trait
  | where
  |     <Self::Size as RenameSizeType>::CheckType: TotalSizeIsMultipleOfEightBits,
  |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CheckTotalSizeMultipleOf8`
  = note: `CheckTotalSizeMultipleOf8` is a "sealed trait", because to implement it you also need to implement `modular_bitfield::private::checks::TotalSizeIsMultipleOfEightBits`, which is not accessible; this is usually done to force you to use one of the provided types that already implement it
  = help: the following type implements the trait:
            modular_bitfield::private::checks::ZeroMod8

error[E0277]: the trait bound `SevenMod8: TotalSizeIsMultipleOfEightBits` is not satisfied
 --> tests/filled-param/invalid-specified-as-filled.rs:5:1
  |
5 | pub struct UnfilledBitfield {
  | ^^^ the trait `TotalSizeIsMultipleOfEightBits` is not implemented for `SevenMod8`
  |
  = help: the trait `TotalSizeIsMultipleOfEightBits` is implemented for `ZeroMod8`
note: required by a bound in `CheckTotalSizeMultipleOf8::Size`
 --> src/private/checks.rs
  |
  |     <Self::Size as RenameSizeType>::CheckType: TotalSizeIsMultipleOfEightBits,
  |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CheckTotalSizeMultipleOf8::Size`
  | {
  |     type Size: RenameSizeType;
  |          ---- required by a bound in this associated type
